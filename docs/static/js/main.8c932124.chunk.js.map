{"version":3,"sources":["logo.svg","componentes/Nav.js","componentes/Cards.js","hooks/useFetch .js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","class","src","style","className","href","onClick","mostrar","elemento","mostrarTodos","Cards","consulta","url","useState","datos","carga","datosAPI","setDatosAPI","useEffect","setTimeout","fetch","then","data","json","useFetch","map","campeones","index","marginLeft","marginRight","width","img","alt","nombre","rol","posicion","role","App","mostrarRol","mostrarPosicion","mostrarAnadir","setMostrar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAAe,I,mBCuCAA,EArCH,SAACC,GACT,OACI,8BACI,qBAAKC,MAAM,8CAAX,SACI,qBAAKA,MAAM,kBAAX,SACI,qBAAIA,MAAM,kCAAV,UACQ,oBAAIA,MAAM,WAAV,SACI,qBAAKC,IAAI,0BAA0BC,MAAO,CAAC,MAAQ,WAGvD,oBAAIF,MAAM,kBAAV,SACI,mBAAGG,UAAU,WAAWC,KAAK,IAAIC,QAAW,WACvCN,EAAMO,SAAQ,SAACC,GACZ,OAAO,2BACFA,GADL,IAEEC,cAAeD,EAASC,mBAJlC,8BASJ,oBAAIR,MAAM,kBAAV,SACI,mBAAGG,UAAU,WAAWC,KAAK,IAA7B,+BAEJ,oBAAIJ,MAAM,kBAAV,SACI,mBAAGG,UAAU,WAAWC,KAAK,IAA7B,uCAEJ,oBAAIJ,MAAM,kBAAV,SACI,mBAAGG,UAAU,WAAWC,KAAK,IAA7B,6CC1BnBK,EAAQ,WACjB,IAAMC,ECFc,SAACC,GAAS,IAAD,EACCC,mBAAS,CAAEC,MAAO,GAAIC,OAAO,IAD9B,mBACxBC,EADwB,KACdC,EADc,KAa/B,OAVAC,qBAAU,WACRC,YAAW,WACTC,MAAMR,GACHS,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACC,GACLL,EAAY,CAAEH,MAAOQ,EAAMP,OAAO,SAErC,OACF,IAEIC,EDXYQ,CACf,oCAGMV,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,MA6BX,OACI,mCAEE,qBAAKX,UAAU,MAAf,SACGW,EA9BFD,EAAMQ,KAAKG,KAAI,SAACC,EAAWC,GAE9B,OACI,qBACAxB,MAAO,CAACyB,WAAY,KAAMC,YAAa,MACvCzB,UAAU,0CAFV,SAMA,sBAAKA,UAAU,OAAOD,MAAO,CAAE2B,MAAO,SAAtC,UACI,qBAAK5B,IAAKwB,EAAUK,IAAK3B,UAAU,eAAe4B,IAAI,QACtD,sBAAK5B,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,SAA4BsB,EAAUO,SACtC,oBAAG7B,UAAU,YAAb,kBACUsB,EAAUQ,IAChB,qBAAKhC,IAAG,sBAAiBwB,EAAUQ,IAA3B,aAEZ,oBAAG9B,UAAU,YAAb,uBACesB,EAAUS,mBAZxBR,MA2BH,qBAAK1B,MAAM,wCAAwCmC,KAAK,QAAQjC,MAAO,CAAC,cAAc,MAAO,UAAY,MAAzG,iCElBHkC,MApBf,WAAgB,IAAD,EAEgBxB,mBAAS,CACpCJ,cAAc,EACd6B,YAAW,EACXC,iBAAgB,EAChBC,eAAc,IANH,mBAEPjC,EAFO,KAEEkC,EAFF,KASb,OACE,qCACA,cAAC,EAAD,CAAKlC,QAASkC,IACblC,EAAQE,cACP,qBAAKL,UAAU,MAAf,SACA,cAAC,EAAD,UCRSsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8c932124.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n        <div>\r\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div class=\"container-fluid\">\r\n                    <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li class=\"nav-item\">\r\n                                <img src=\"../imagenes/unnamed.png\" style={{'width':'50%', }}/>\r\n                            </li>\r\n\r\n                            <li class=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\" onClick = {() =>{\r\n                                     props.mostrar((elemento) => {\r\n                                        return {\r\n                                          ...elemento,\r\n                                          mostrarTodos: !elemento.mostrarTodos,\r\n                                        };\r\n                                      });\r\n                                }}>Mostrar Todos </a>\r\n                            </li>\r\n                            <li class=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\">Mostrar por Rol</a>\r\n                            </li>\r\n                            <li class=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\">Mostrar por Posición</a>\r\n                            </li>\r\n                            <li class=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\">Añadir campeones</a>\r\n                            </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport { fetch, useFetch } from \"../hooks/useFetch \";\r\n\r\nexport const Cards = () => {\r\n    const consulta = useFetch(\r\n      \"http://localhost:3000/api/select\"\r\n    );\r\n\r\n    const { datos, carga } = consulta;\r\n\r\n    const mostrarDatos = () => {\r\n        return datos.data.map((campeones, index) => {\r\n            \r\n            return (\r\n                <div\r\n                style={{marginLeft: \"2%\", marginRight: \"2%\"}}\r\n                className=\"col animate__animated animate__zoomInUp\"\r\n                key={index}\r\n                >\r\n\r\n                <div className=\"card\" style={{ width: \"18rem\"}}>\r\n                    <img src={campeones.img} className=\"card-img-top\" alt=\"...\"></img>\r\n                    <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{campeones.nombre}</h5>\r\n                    <p className=\"card-text\">\r\n                        Rol: {campeones.rol} \r\n                        <img src={`../imagenes/${campeones.rol}.png`}/>\r\n                    </p>\r\n                    <p className=\"card-text\">\r\n                        Posicion: {campeones.posicion}\r\n                    </p>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n            });\r\n        };\r\n        return (\r\n            <>\r\n        \r\n              <div className=\"row\" >\r\n                {carga ? (\r\n                  mostrarDatos()\r\n                ) : (\r\n                  <div class=\"alert alert-primary animate__animated\" role=\"alert\" style={{'margin-left':'43%', 'marginTop':'1%'}} >\r\n                    Cargando datos\r\n                  </div>  \r\n                )}\r\n              </div>\r\n            </>\r\n          );\r\n        };\r\n\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n  const [datosAPI, setDatosAPI] = useState({ datos: [], carga: false });\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetch(url)\r\n        .then((data) => data.json())\r\n        .then((data) => {\r\n          setDatosAPI({ datos: data, carga: true });\r\n        });\r\n    }, 3000);\r\n  }, []);\r\n\r\n  return datosAPI;\r\n};","import logo from './logo.svg';\nimport './App.css';\nimport Nav from './componentes/Nav';\nimport { useState } from 'react';\nimport { Cards } from './componentes/Cards';\n\nfunction App() {\n\n  const[mostrar, setMostrar] = useState({\n    mostrarTodos: true,\n    mostrarRol:false,\n    mostrarPosicion:false,\n    mostrarAnadir:false\n  });\n\n  return (\n    <>\n    <Nav mostrar={setMostrar}/>\n    {mostrar.mostrarTodos && (\n      <div className=\"row\">\n      <Cards/>\n      </div>\n    )}\n    </>\n  )}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}